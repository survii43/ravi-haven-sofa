{"ast":null,"code":"var _jsxFileName = \"/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/component/ImageGride.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\n// import firebase from '../firebase/firebase';\n// import 'firebase/compat/firestore';\n// import 'firebase/compat/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ImageGallery = () => {\n  _s();\n  const [imageUrls, setImageUrls] = useState([]);\n  const [visibleImageCount, setVisibleImageCount] = useState(8);\n  useEffect(() => {\n    // Initialize Firebase app if not already initialized\n    // if (!firebase.apps.length) {\n    //   firebase.initializeApp(yourFirebaseConfig);\n    // }\n\n    // Fetch images from Firebase Storage\n    // const fetchImages = async () => {\n    //   try {\n    //     const storageRef = firebase.storage().ref();\n    //     const imagesRef = storageRef.child('gallery');\n    //     const imageList = await imagesRef.listAll();\n    //     const urls = await Promise.all(\n    //       imageList.items.map(async (imageRef) => {\n    //         return await imageRef.getDownloadURL();\n    //       })\n    //     );\n    //     setImageUrls(urls);\n    //   } catch (error) {\n    //     console.error('Error fetching images:', error);\n    //   }\n    // };\n\n    // Fetch images when the component mounts\n    fetchImages();\n\n    // Clean up Firebase app instance to prevent memory leaks\n    return () => {\n      if (firebase.apps.length > 0) {\n        firebase.app().delete();\n      }\n    };\n  }, []);\n  const handleShowMore = () => {\n    setVisibleImageCount(prevCount => prevCount + 4); // Increase visible image count by 4\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\",\n      children: imageUrls.slice(0, visibleImageCount).map((url, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aspect-w-1 aspect-h-1\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: url,\n          alt: `Image ${index}`,\n          className: \"object-cover w-full h-full rounded-lg\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), visibleImageCount < imageUrls.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleShowMore,\n      className: \"block mx-auto mt-4 px-4 py-2 bg-blue-500 text-white rounded-md shadow hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-400\",\n      children: \"Show More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(ImageGallery, \"ggCSTbX+vL1xC6LArj7WEiZVKA0=\");\n_c = ImageGallery;\nexport default ImageGallery;\nvar _c;\n$RefreshReg$(_c, \"ImageGallery\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ImageGallery","_s","imageUrls","setImageUrls","visibleImageCount","setVisibleImageCount","fetchImages","firebase","apps","length","app","delete","handleShowMore","prevCount","className","children","slice","map","url","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/component/ImageGride.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n// import firebase from '../firebase/firebase';\n// import 'firebase/compat/firestore';\n// import 'firebase/compat/storage';\n\nconst ImageGallery = () => {\n  const [imageUrls, setImageUrls] = useState([]);\n  const [visibleImageCount, setVisibleImageCount] = useState(8);\n\n  useEffect(() => {\n    // Initialize Firebase app if not already initialized\n    // if (!firebase.apps.length) {\n    //   firebase.initializeApp(yourFirebaseConfig);\n    // }\n\n    // Fetch images from Firebase Storage\n    // const fetchImages = async () => {\n    //   try {\n    //     const storageRef = firebase.storage().ref();\n    //     const imagesRef = storageRef.child('gallery');\n    //     const imageList = await imagesRef.listAll();\n    //     const urls = await Promise.all(\n    //       imageList.items.map(async (imageRef) => {\n    //         return await imageRef.getDownloadURL();\n    //       })\n    //     );\n    //     setImageUrls(urls);\n    //   } catch (error) {\n    //     console.error('Error fetching images:', error);\n    //   }\n    // };\n\n    // Fetch images when the component mounts\n    fetchImages();\n\n    // Clean up Firebase app instance to prevent memory leaks\n    return () => {\n      if (firebase.apps.length > 0) {\n        firebase.app().delete();\n      }\n    };\n  }, []);\n\n  const handleShowMore = () => {\n    setVisibleImageCount(prevCount => prevCount + 4); // Increase visible image count by 4\n  };\n\n  return (\n    <div className=\"container mx-auto\">\n      <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4\">\n        {imageUrls.slice(0, visibleImageCount).map((url, index) => (\n          <div key={index} className=\"aspect-w-1 aspect-h-1\">\n            <img src={url} alt={`Image ${index}`} className=\"object-cover w-full h-full rounded-lg\" />\n          </div>\n        ))}\n      </div>\n      {visibleImageCount < imageUrls.length && (\n        <button\n          onClick={handleShowMore}\n          className=\"block mx-auto mt-4 px-4 py-2 bg-blue-500 text-white rounded-md shadow hover:bg-blue-600 focus:outline-none focus:ring focus:ring-blue-400\"\n        >\n          Show More\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default ImageGallery;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,CAAC,CAAC;EAE7DC,SAAS,CAAC,MAAM;IACd;IACA;IACA;IACA;;IAEA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;;IAEA;IACAS,WAAW,CAAC,CAAC;;IAEb;IACA,OAAO,MAAM;MACX,IAAIC,QAAQ,CAACC,IAAI,CAACC,MAAM,GAAG,CAAC,EAAE;QAC5BF,QAAQ,CAACG,GAAG,CAAC,CAAC,CAACC,MAAM,CAAC,CAAC;MACzB;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,cAAc,GAAGA,CAAA,KAAM;IAC3BP,oBAAoB,CAACQ,SAAS,IAAIA,SAAS,GAAG,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;EAED,oBACEd,OAAA;IAAKe,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChChB,OAAA;MAAKe,SAAS,EAAC,qEAAqE;MAAAC,QAAA,EACjFb,SAAS,CAACc,KAAK,CAAC,CAAC,EAAEZ,iBAAiB,CAAC,CAACa,GAAG,CAAC,CAACC,GAAG,EAAEC,KAAK,kBACpDpB,OAAA;QAAiBe,SAAS,EAAC,uBAAuB;QAAAC,QAAA,eAChDhB,OAAA;UAAKqB,GAAG,EAAEF,GAAI;UAACG,GAAG,EAAG,SAAQF,KAAM,EAAE;UAACL,SAAS,EAAC;QAAuC;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC,GADlFN,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EACLrB,iBAAiB,GAAGF,SAAS,CAACO,MAAM,iBACnCV,OAAA;MACE2B,OAAO,EAAEd,cAAe;MACxBE,SAAS,EAAC,2IAA2I;MAAAC,QAAA,EACtJ;IAED;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACT;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA7DID,YAAY;AAAA2B,EAAA,GAAZ3B,YAAY;AA+DlB,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}