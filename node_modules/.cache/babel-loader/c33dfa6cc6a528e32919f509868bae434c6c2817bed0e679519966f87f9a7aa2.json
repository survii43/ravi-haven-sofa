{"ast":null,"code":"var _jsxFileName = \"/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/admin/HeroSectionAdmin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { render } from 'react-dom';\n// import { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\n// import AddIcon from '@mui/icons-material/Add';\n\n// const dummyData = [\n//   { id: 1, name: 'John', age: 30, email: 'john@example.com' },\n//   { id: 2, name: 'Doe', age: 25, email: 'doe@example.com' },\n//   { id: 3, name: 'Jane', age: 35, email: 'jane@example.com' },\n// ];\n\n// const MyTable = () => {\n//   const [data, setData] = useState(dummyData);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n//   const [addDialogOpen, setAddDialogOpen] = useState(false);\n//   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n//   const [selectedId, setSelectedId] = useState(null);\n//   const [editedData, setEditedData] = useState({});\n//   const [newData, setNewData] = useState({});\n\n//   const handleEditClick = (id) => {\n//     const selectedRow = data.find((item) => item.id === id);\n//     setEditedData(selectedRow);\n//     setSelectedId(id);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleAddClick = () => {\n//     setAddDialogOpen(true);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedId(id);\n//     setDeleteDialogOpen(true);\n//   };\n\n//   const handleEditSave = () => {\n//     setData((prevData) =>\n//       prevData.map((item) => (item.id === selectedId ? editedData : item))\n//     );\n//     setEditDialogOpen(false);\n//   };\n\n//   const handleAddSave = () => {\n//     const id = data.length + 1;\n//     setData([...data, { ...newData, id }]);\n//     setAddDialogOpen(false);\n//   };\n\n//   const handleDeleteConfirm = () => {\n//     setData((prevData) => prevData.filter((item) => item.id !== selectedId));\n//     setDeleteDialogOpen(false);\n//   };\n\n//   return (\n//     <>\n//       <TableContainer>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Age</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Action</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.map((row) => (\n//               <TableRow key={row.id}>\n//                 <TableCell>{row.name}</TableCell>\n//                 <TableCell>{row.age}</TableCell>\n//                 <TableCell>{row.email}</TableCell>\n//                 <TableCell>\n//                   <IconButton onClick={() => handleEditClick(row.id)}>\n//                     <EditIcon />\n//                   </IconButton>\n//                   <IconButton onClick={() => handleDeleteClick(row.id)}>\n//                     <DeleteIcon />\n//                   </IconButton>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Edit Dialog */}\n//       <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n//         <DialogTitle>Edit Data</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Edit the data fields:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={editedData.name || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={editedData.age || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={editedData.email || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleEditSave}>Save</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Dialog */}\n//       <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)}>\n//         <DialogTitle>Add New Entry</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Enter the new data:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={newData.name || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={newData.age || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={newData.email || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleAddSave}>Add</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Delete Confirmation Dialog */}\n//       <Dialog\n//         open={deleteDialogOpen}\n//         onClose={() => setDeleteDialogOpen(false)}\n//       >\n//         <DialogTitle>Delete Confirmation</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Are you sure you want to delete this record?\n//           </DialogContentText>\n//           <Button onClick={handleDeleteConfirm}>Confirm</Button>\n//           <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Button */}\n//       <IconButton onClick={handleAddClick}>\n//         <AddIcon />\n//       </IconButton>\n//     </>\n//   );\n// };\n\n// export default MyTable;\n\nimport React, { useEffect, useState } from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n// import { Button, TextField } from '@mui/material';\nimport firebase from '../firebase/firebase';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst HeroSectionAdmin = () => {\n  _s();\n  const [imageUrls, setImageUrls] = useState([]);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  //upload image\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleClearFile = () => {\n    setFile(null);\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const storageRef = firebase.storage().ref();\n      const imagesRef = storageRef.child('hero_section');\n      const imageList = await imagesRef.listAll();\n      // Get download URLs for each image\n      const urls = await Promise.all(imageList.items.map(async imageRef => {\n        return await imageRef.getDownloadURL();\n      }));\n      setImageUrls(urls);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  const handleUpload = async () => {\n    try {\n      if (!file) {\n        console.error('No file selected.');\n        return;\n      }\n      const storageRef = firebase.storage().ref();\n      // Specify the path to the hero_section folder and include the file name\n      const fileRef = storageRef.child(`hero_section/${file.name}`);\n      await fileRef.put(file);\n      console.log('File uploaded successfully.');\n\n      // Clear input field after successful upload\n      setFile(null);\n      fetchImages();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const handleEditClick = id => {\n    // Handle edit action here\n  };\n  const handleDeleteClick = id => {\n    setSelectedId(id);\n    setDeleteDialogOpen(true);\n  };\n  const handleEditSave = () => {\n    // Handle edit save action here\n    setEditDialogOpen(false);\n  };\n  const handleDeleteConfirm = async () => {\n    try {\n      const imageUrl = imageUrls[selectedId];\n      // Delete image from Firebase Storage\n      const storageRef = firebase.storage().refFromURL(imageUrl);\n      await storageRef.delete();\n\n      // Update state to remove deleted image\n      setImageUrls(prevImageUrls => prevImageUrls.filter((url, index) => index !== selectedId));\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n    setDeleteDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Hero Section Image Table\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center border rounded p-4 w-[300px]\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: handleFileChange,\n        className: \"hidden\",\n        id: \"upload-file\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"upload-file\",\n        className: \"cursor-pointer mb-2\",\n        children: \"Choose File\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 9\n      }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-between mb-2 w-full\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"truncate mr-2\",\n          children: file.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClearFile,\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleUpload,\n        disabled: !file,\n        children: \"Upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: url,\n                alt: `Image ${index}`,\n                width: \"50\",\n                height: \"50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 319,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleEditClick(index),\n                children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                onClick: () => handleDeleteClick(index),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: editDialogOpen,\n      onClose: () => setEditDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Edit Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Edit the image details:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleEditSave,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: deleteDialogOpen,\n      onClose: () => setDeleteDialogOpen(false),\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        children: \"Delete Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 347,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          children: \"Are you sure you want to delete this image?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 349,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleDeleteConfirm,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setDeleteDialogOpen(false),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 351,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 346,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n_s(HeroSectionAdmin, \"gBzLO/2Cgy4xuvLxknzhfVgx1mM=\");\n_c = HeroSectionAdmin;\nexport default HeroSectionAdmin;\nvar _c;\n$RefreshReg$(_c, \"HeroSectionAdmin\");","map":{"version":3,"names":["React","useEffect","useState","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","IconButton","Dialog","DialogTitle","DialogContent","DialogContentText","Button","TextField","DeleteIcon","EditIcon","firebase","CloseIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","HeroSectionAdmin","_s","imageUrls","setImageUrls","editDialogOpen","setEditDialogOpen","deleteDialogOpen","setDeleteDialogOpen","selectedId","setSelectedId","editedData","setEditedData","file","setFile","fileName","setFileName","handleFileChange","e","selectedFile","target","files","handleClearFile","fetchImages","storageRef","storage","ref","imagesRef","child","imageList","listAll","urls","Promise","all","items","map","imageRef","getDownloadURL","error","console","handleUpload","fileRef","name","put","log","handleEditClick","id","handleDeleteClick","handleEditSave","handleDeleteConfirm","imageUrl","refFromURL","delete","prevImageUrls","filter","url","index","children","_jsxFileName","lineNumber","columnNumber","className","type","accept","onChange","htmlFor","onClick","variant","color","disabled","src","alt","width","height","open","onClose","_c","$RefreshReg$"],"sources":["/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/admin/HeroSectionAdmin.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { render } from 'react-dom';\n// import { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\n// import AddIcon from '@mui/icons-material/Add';\n\n// const dummyData = [\n//   { id: 1, name: 'John', age: 30, email: 'john@example.com' },\n//   { id: 2, name: 'Doe', age: 25, email: 'doe@example.com' },\n//   { id: 3, name: 'Jane', age: 35, email: 'jane@example.com' },\n// ];\n\n// const MyTable = () => {\n//   const [data, setData] = useState(dummyData);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n//   const [addDialogOpen, setAddDialogOpen] = useState(false);\n//   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n//   const [selectedId, setSelectedId] = useState(null);\n//   const [editedData, setEditedData] = useState({});\n//   const [newData, setNewData] = useState({});\n\n//   const handleEditClick = (id) => {\n//     const selectedRow = data.find((item) => item.id === id);\n//     setEditedData(selectedRow);\n//     setSelectedId(id);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleAddClick = () => {\n//     setAddDialogOpen(true);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedId(id);\n//     setDeleteDialogOpen(true);\n//   };\n\n//   const handleEditSave = () => {\n//     setData((prevData) =>\n//       prevData.map((item) => (item.id === selectedId ? editedData : item))\n//     );\n//     setEditDialogOpen(false);\n//   };\n\n//   const handleAddSave = () => {\n//     const id = data.length + 1;\n//     setData([...data, { ...newData, id }]);\n//     setAddDialogOpen(false);\n//   };\n\n//   const handleDeleteConfirm = () => {\n//     setData((prevData) => prevData.filter((item) => item.id !== selectedId));\n//     setDeleteDialogOpen(false);\n//   };\n\n//   return (\n//     <>\n//       <TableContainer>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Age</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Action</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.map((row) => (\n//               <TableRow key={row.id}>\n//                 <TableCell>{row.name}</TableCell>\n//                 <TableCell>{row.age}</TableCell>\n//                 <TableCell>{row.email}</TableCell>\n//                 <TableCell>\n//                   <IconButton onClick={() => handleEditClick(row.id)}>\n//                     <EditIcon />\n//                   </IconButton>\n//                   <IconButton onClick={() => handleDeleteClick(row.id)}>\n//                     <DeleteIcon />\n//                   </IconButton>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Edit Dialog */}\n//       <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n//         <DialogTitle>Edit Data</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Edit the data fields:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={editedData.name || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={editedData.age || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={editedData.email || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleEditSave}>Save</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Dialog */}\n//       <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)}>\n//         <DialogTitle>Add New Entry</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Enter the new data:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={newData.name || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={newData.age || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={newData.email || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleAddSave}>Add</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Delete Confirmation Dialog */}\n//       <Dialog\n//         open={deleteDialogOpen}\n//         onClose={() => setDeleteDialogOpen(false)}\n//       >\n//         <DialogTitle>Delete Confirmation</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Are you sure you want to delete this record?\n//           </DialogContentText>\n//           <Button onClick={handleDeleteConfirm}>Confirm</Button>\n//           <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Button */}\n//       <IconButton onClick={handleAddClick}>\n//         <AddIcon />\n//       </IconButton>\n//     </>\n//   );\n// };\n\n// export default MyTable;\n\n\nimport React, { useEffect, useState } from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n// import { Button, TextField } from '@mui/material';\nimport firebase from '../firebase/firebase';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst HeroSectionAdmin = () => {\n    const [imageUrls, setImageUrls] = useState([]);\n    const [editDialogOpen, setEditDialogOpen] = useState(false);\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [selectedId, setSelectedId] = useState(null);\n    const [editedData, setEditedData] = useState({});\n    //upload image\n    const [file, setFile] = useState(null);\n    \n    const [fileName, setFileName] = useState('');\n  \n    const handleFileChange = (e) => {\n      const selectedFile = e.target.files[0];\n      setFile(selectedFile);\n    };\n  \n    const handleClearFile = () => {\n        setFile(null);\n      };\n    useEffect(() => {\n        \n        fetchImages();\n    }, []);\n\n    const fetchImages = async () => {\n        try {\n            const storageRef = firebase.storage().ref();\n            const imagesRef = storageRef.child('hero_section');\n            const imageList = await imagesRef.listAll();\n            // Get download URLs for each image\n            const urls = await Promise.all(\n                imageList.items.map(async (imageRef) => {\n                    return await imageRef.getDownloadURL();\n                })\n            );\n            setImageUrls(urls);\n        } catch (error) {\n            console.error('Error fetching images:', error);\n        }\n    };\n\n   \n    const handleUpload = async () => {\n        try {\n          if (!file) {\n            console.error('No file selected.');\n            return;\n          }\n      \n          const storageRef = firebase.storage().ref();\n          // Specify the path to the hero_section folder and include the file name\n          const fileRef = storageRef.child(`hero_section/${file.name}`);\n          await fileRef.put(file);\n          console.log('File uploaded successfully.');\n          \n          // Clear input field after successful upload\n          setFile(null);\n          fetchImages();\n        } catch (error) {\n          console.error('Error uploading file:', error);\n        }\n    };\n      \n    \n    const handleEditClick = (id) => {\n        // Handle edit action here\n    };\n    const handleDeleteClick = (id) => {\n        setSelectedId(id);\n        setDeleteDialogOpen(true);\n    };\n\n    const handleEditSave = () => {\n        // Handle edit save action here\n        setEditDialogOpen(false);\n    };\n\n    const handleDeleteConfirm = async () => {\n        try {\n            const imageUrl = imageUrls[selectedId];\n            // Delete image from Firebase Storage\n            const storageRef = firebase.storage().refFromURL(imageUrl);\n            await storageRef.delete();\n\n            // Update state to remove deleted image\n            setImageUrls((prevImageUrls) =>\n                prevImageUrls.filter((url, index) => index !== selectedId)\n            );\n        } catch (error) {\n            console.error('Error deleting image:', error);\n        }\n        setDeleteDialogOpen(false);\n    };\n\n    return (\n        <><div>Hero Section Image Table</div>\n        <div className='flex flex-col items-center border rounded p-4 w-[300px]'>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileChange}\n          className=\"hidden\"\n          id=\"upload-file\"\n        />\n        <label htmlFor=\"upload-file\" className=\"cursor-pointer mb-2\">\n          Choose File\n        </label>\n        {file && (\n          <div className=\"flex items-center justify-between mb-2 w-full\">\n            <p className=\"truncate mr-2\">{file.name}</p>\n            <Button onClick={handleClearFile}>\n              <CloseIcon />\n            </Button>\n          </div>\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleUpload}\n          disabled={!file}\n        >\n          Upload\n        </Button>\n      </div>\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Image</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {imageUrls.map((url, index) => (\n                            <TableRow key={index}>\n                                <TableCell>\n                                    <img src={url} alt={`Image ${index}`} width=\"50\" height=\"50\" />\n                                </TableCell>\n                                <TableCell>\n                                    <IconButton onClick={() => handleEditClick(index)}>\n                                        <EditIcon />\n                                    </IconButton>\n                                    <IconButton onClick={() => handleDeleteClick(index)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            {/* Edit Dialog */}\n            <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n                <DialogTitle>Edit Image</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Edit the image details:</DialogContentText>\n                    {/* Add input fields for editing */}\n                    <Button onClick={handleEditSave}>Save</Button>\n                </DialogContent>\n            </Dialog>\n\n            {/* Delete Confirmation Dialog */}\n            <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n                <DialogTitle>Delete Image</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Are you sure you want to delete this image?</DialogContentText>\n                    <Button onClick={handleDeleteConfirm}>Confirm</Button>\n                    <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n                </DialogContent>\n            </Dialog>\n        </>\n    );\n};\n\nexport default HeroSectionAdmin;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACtL,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C;AACA,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAElD,MAAMC,gB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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}