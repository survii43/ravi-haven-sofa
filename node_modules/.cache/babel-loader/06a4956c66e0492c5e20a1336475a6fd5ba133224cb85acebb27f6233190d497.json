{"ast":null,"code":"var _jsxFileName = \"/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/admin/HeroSectionAdmin.js\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react';\n// import { render } from 'react-dom';\n// import { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\n// import AddIcon from '@mui/icons-material/Add';\n\n// const dummyData = [\n//   { id: 1, name: 'John', age: 30, email: 'john@example.com' },\n//   { id: 2, name: 'Doe', age: 25, email: 'doe@example.com' },\n//   { id: 3, name: 'Jane', age: 35, email: 'jane@example.com' },\n// ];\n\n// const MyTable = () => {\n//   const [data, setData] = useState(dummyData);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n//   const [addDialogOpen, setAddDialogOpen] = useState(false);\n//   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n//   const [selectedId, setSelectedId] = useState(null);\n//   const [editedData, setEditedData] = useState({});\n//   const [newData, setNewData] = useState({});\n\n//   const handleEditClick = (id) => {\n//     const selectedRow = data.find((item) => item.id === id);\n//     setEditedData(selectedRow);\n//     setSelectedId(id);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleAddClick = () => {\n//     setAddDialogOpen(true);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedId(id);\n//     setDeleteDialogOpen(true);\n//   };\n\n//   const handleEditSave = () => {\n//     setData((prevData) =>\n//       prevData.map((item) => (item.id === selectedId ? editedData : item))\n//     );\n//     setEditDialogOpen(false);\n//   };\n\n//   const handleAddSave = () => {\n//     const id = data.length + 1;\n//     setData([...data, { ...newData, id }]);\n//     setAddDialogOpen(false);\n//   };\n\n//   const handleDeleteConfirm = () => {\n//     setData((prevData) => prevData.filter((item) => item.id !== selectedId));\n//     setDeleteDialogOpen(false);\n//   };\n\n//   return (\n//     <>\n//       <TableContainer>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Age</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Action</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.map((row) => (\n//               <TableRow key={row.id}>\n//                 <TableCell>{row.name}</TableCell>\n//                 <TableCell>{row.age}</TableCell>\n//                 <TableCell>{row.email}</TableCell>\n//                 <TableCell>\n//                   <IconButton onClick={() => handleEditClick(row.id)}>\n//                     <EditIcon />\n//                   </IconButton>\n//                   <IconButton onClick={() => handleDeleteClick(row.id)}>\n//                     <DeleteIcon />\n//                   </IconButton>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Edit Dialog */}\n//       <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n//         <DialogTitle>Edit Data</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Edit the data fields:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={editedData.name || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={editedData.age || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={editedData.email || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleEditSave}>Save</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Dialog */}\n//       <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)}>\n//         <DialogTitle>Add New Entry</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Enter the new data:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={newData.name || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={newData.age || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={newData.email || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleAddSave}>Add</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Delete Confirmation Dialog */}\n//       <Dialog\n//         open={deleteDialogOpen}\n//         onClose={() => setDeleteDialogOpen(false)}\n//       >\n//         <DialogTitle>Delete Confirmation</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Are you sure you want to delete this record?\n//           </DialogContentText>\n//           <Button onClick={handleDeleteConfirm}>Confirm</Button>\n//           <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Button */}\n//       <IconButton onClick={handleAddClick}>\n//         <AddIcon />\n//       </IconButton>\n//     </>\n//   );\n// };\n\n// export default MyTable;\n\nimport React, { useEffect, useState } from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n// import { Button, TextField } from '@mui/material';\nimport firebase from '../firebase/firebase';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HeroSectionAdmin = () => {\n  _s();\n  const [imageUrls, setImageUrls] = useState([]);\n  const [editDialogOpen, setEditDialogOpen] = useState(false);\n  const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n  const [selectedId, setSelectedId] = useState(null);\n  const [editedData, setEditedData] = useState({});\n  //upload image\n  const [file, setFile] = useState(null);\n  const [fileName, setFileName] = useState('');\n  const handleFileChange = e => {\n    const selectedFile = e.target.files[0];\n    setFile(selectedFile);\n  };\n  const handleClearFile = () => {\n    setFile(null);\n  };\n  useEffect(() => {\n    fetchImages();\n  }, []);\n  const fetchImages = async () => {\n    try {\n      const storageRef = firebase.storage().ref();\n      const imagesRef = storageRef.child('hero_section');\n      const imageList = await imagesRef.listAll();\n      // Get download URLs for each image\n      const urls = await Promise.all(imageList.items.map(async imageRef => {\n        return await imageRef.getDownloadURL();\n      }));\n      setImageUrls(urls);\n    } catch (error) {\n      console.error('Error fetching images:', error);\n    }\n  };\n  const handleUpload = async () => {\n    try {\n      if (!file) {\n        console.error('No file selected.');\n        return;\n      }\n      const storageRef = firebase.storage().ref();\n      // Specify the path to the hero_section folder and include the file name\n      const fileRef = storageRef.child(`hero_section/${file.name}`);\n      await fileRef.put(file);\n      console.log('File uploaded successfully.');\n\n      // Clear input field after successful upload\n      setFile(null);\n      fetchImages();\n    } catch (error) {\n      console.error('Error uploading file:', error);\n    }\n  };\n  const handleDeleteClick = id => {\n    setSelectedId(id);\n    setDeleteDialogOpen(true);\n  };\n  const handleDeleteConfirm = async () => {\n    try {\n      const imageUrl = imageUrls[selectedId];\n      // Delete image from Firebase Storage\n      const storageRef = firebase.storage().refFromURL(imageUrl);\n      await storageRef.delete();\n\n      // Update state to remove deleted image\n      setImageUrls(prevImageUrls => prevImageUrls.filter((url, index) => index !== selectedId));\n    } catch (error) {\n      console.error('Error deleting image:', error);\n    }\n    setDeleteDialogOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-[40%]\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border \",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Hero Section\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center border rounded p-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: handleFileChange,\n          className: \"hidden\",\n          id: \"upload-file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 275,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"upload-file\",\n          className: \"cursor-pointer mb-2\",\n          children: \"Choose File\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 9\n        }, this), file && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex items-center justify-between mb-2 w-full\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"truncate mr-2\",\n            children: file.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleClearFile,\n            children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 288,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 286,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleUpload,\n          disabled: !file,\n          children: \"Upload\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Action\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: url,\n                  alt: `Image ${index}`,\n                  width: \"100\",\n                  height: \"100\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 314,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(IconButton, {\n                  onClick: () => handleDeleteClick(index),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 319,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 316,\n                columnNumber: 33\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 29\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 303,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n        open: deleteDialogOpen,\n        onClose: () => setDeleteDialogOpen(false),\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: \"Delete Image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n          children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n            children: \"Are you sure you want to delete this image?\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 334,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: handleDeleteConfirm,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 335,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => setDeleteDialogOpen(false),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 336,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 271,\n    columnNumber: 9\n  }, this);\n};\n_s(HeroSectionAdmin, \"gBzLO/2Cgy4xuvLxknzhfVgx1mM=\");\n_c = HeroSectionAdmin;\nexport default HeroSectionAdmin;\nvar _c;\n$RefreshReg$(_c, \"HeroSectionAdmin\");","map":{"version":3,"names":["React","useEffect","useState","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","IconButton","Dialog","DialogTitle","DialogContent","DialogContentText","Button","TextField","DeleteIcon","EditIcon","firebase","CloseIcon","jsxDEV","_jsxDEV","HeroSectionAdmin","_s","imageUrls","setImageUrls","editDialogOpen","setEditDialogOpen","deleteDialogOpen","setDeleteDialogOpen","selectedId","setSelectedId","editedData","setEditedData","file","setFile","fileName","setFileName","handleFileChange","e","selectedFile","target","files","handleClearFile","fetchImages","storageRef","storage","ref","imagesRef","child","imageList","listAll","urls","Promise","all","items","map","imageRef","getDownloadURL","error","console","handleUpload","fileRef","name","put","log","handleDeleteClick","id","handleDeleteConfirm","imageUrl","refFromURL","delete","prevImageUrls","filter","url","index","className","children","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","htmlFor","onClick","variant","color","disabled","src","alt","width","height","open","onClose","_c","$RefreshReg$"],"sources":["/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/admin/HeroSectionAdmin.js"],"sourcesContent":["// import React, { useState } from 'react';\n// import { render } from 'react-dom';\n// import { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\n// import DeleteIcon from '@mui/icons-material/Delete';\n// import EditIcon from '@mui/icons-material/Edit';\n// import AddIcon from '@mui/icons-material/Add';\n\n// const dummyData = [\n//   { id: 1, name: 'John', age: 30, email: 'john@example.com' },\n//   { id: 2, name: 'Doe', age: 25, email: 'doe@example.com' },\n//   { id: 3, name: 'Jane', age: 35, email: 'jane@example.com' },\n// ];\n\n// const MyTable = () => {\n//   const [data, setData] = useState(dummyData);\n//   const [editDialogOpen, setEditDialogOpen] = useState(false);\n//   const [addDialogOpen, setAddDialogOpen] = useState(false);\n//   const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n//   const [selectedId, setSelectedId] = useState(null);\n//   const [editedData, setEditedData] = useState({});\n//   const [newData, setNewData] = useState({});\n\n//   const handleEditClick = (id) => {\n//     const selectedRow = data.find((item) => item.id === id);\n//     setEditedData(selectedRow);\n//     setSelectedId(id);\n//     setEditDialogOpen(true);\n//   };\n\n//   const handleAddClick = () => {\n//     setAddDialogOpen(true);\n//   };\n\n//   const handleDeleteClick = (id) => {\n//     setSelectedId(id);\n//     setDeleteDialogOpen(true);\n//   };\n\n//   const handleEditSave = () => {\n//     setData((prevData) =>\n//       prevData.map((item) => (item.id === selectedId ? editedData : item))\n//     );\n//     setEditDialogOpen(false);\n//   };\n\n//   const handleAddSave = () => {\n//     const id = data.length + 1;\n//     setData([...data, { ...newData, id }]);\n//     setAddDialogOpen(false);\n//   };\n\n//   const handleDeleteConfirm = () => {\n//     setData((prevData) => prevData.filter((item) => item.id !== selectedId));\n//     setDeleteDialogOpen(false);\n//   };\n\n//   return (\n//     <>\n//       <TableContainer>\n//         <Table>\n//           <TableHead>\n//             <TableRow>\n//               <TableCell>Name</TableCell>\n//               <TableCell>Age</TableCell>\n//               <TableCell>Email</TableCell>\n//               <TableCell>Action</TableCell>\n//             </TableRow>\n//           </TableHead>\n//           <TableBody>\n//             {data.map((row) => (\n//               <TableRow key={row.id}>\n//                 <TableCell>{row.name}</TableCell>\n//                 <TableCell>{row.age}</TableCell>\n//                 <TableCell>{row.email}</TableCell>\n//                 <TableCell>\n//                   <IconButton onClick={() => handleEditClick(row.id)}>\n//                     <EditIcon />\n//                   </IconButton>\n//                   <IconButton onClick={() => handleDeleteClick(row.id)}>\n//                     <DeleteIcon />\n//                   </IconButton>\n//                 </TableCell>\n//               </TableRow>\n//             ))}\n//           </TableBody>\n//         </Table>\n//       </TableContainer>\n\n//       {/* Edit Dialog */}\n//       <Dialog open={editDialogOpen} onClose={() => setEditDialogOpen(false)}>\n//         <DialogTitle>Edit Data</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Edit the data fields:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={editedData.name || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={editedData.age || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={editedData.email || ''}\n//             onChange={(e) =>\n//               setEditedData({ ...editedData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleEditSave}>Save</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Dialog */}\n//       <Dialog open={addDialogOpen} onClose={() => setAddDialogOpen(false)}>\n//         <DialogTitle>Add New Entry</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>Enter the new data:</DialogContentText>\n//           <TextField\n//             label=\"Name\"\n//             value={newData.name || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, name: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Age\"\n//             value={newData.age || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, age: e.target.value })\n//             }\n//           />\n//           <TextField\n//             label=\"Email\"\n//             value={newData.email || ''}\n//             onChange={(e) =>\n//               setNewData({ ...newData, email: e.target.value })\n//             }\n//           />\n//           <Button onClick={handleAddSave}>Add</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Delete Confirmation Dialog */}\n//       <Dialog\n//         open={deleteDialogOpen}\n//         onClose={() => setDeleteDialogOpen(false)}\n//       >\n//         <DialogTitle>Delete Confirmation</DialogTitle>\n//         <DialogContent>\n//           <DialogContentText>\n//             Are you sure you want to delete this record?\n//           </DialogContentText>\n//           <Button onClick={handleDeleteConfirm}>Confirm</Button>\n//           <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n//         </DialogContent>\n//       </Dialog>\n\n//       {/* Add Button */}\n//       <IconButton onClick={handleAddClick}>\n//         <AddIcon />\n//       </IconButton>\n//     </>\n//   );\n// };\n\n// export default MyTable;\n\n\nimport React, { useEffect, useState } from 'react';\nimport { TableContainer, Table, TableHead, TableBody, TableRow, TableCell, IconButton, Dialog, DialogTitle, DialogContent, DialogContentText, Button, TextField } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\n// import { Button, TextField } from '@mui/material';\nimport firebase from '../firebase/firebase';\nimport CloseIcon from '@mui/icons-material/Close';\n\nconst HeroSectionAdmin = () => {\n    const [imageUrls, setImageUrls] = useState([]);\n    const [editDialogOpen, setEditDialogOpen] = useState(false);\n    const [deleteDialogOpen, setDeleteDialogOpen] = useState(false);\n    const [selectedId, setSelectedId] = useState(null);\n    const [editedData, setEditedData] = useState({});\n    //upload image\n    const [file, setFile] = useState(null);\n    \n    const [fileName, setFileName] = useState('');\n  \n    const handleFileChange = (e) => {\n      const selectedFile = e.target.files[0];\n      setFile(selectedFile);\n    };\n  \n    const handleClearFile = () => {\n        setFile(null);\n      };\n    useEffect(() => {\n        \n        fetchImages();\n    }, []);\n\n    const fetchImages = async () => {\n        try {\n            const storageRef = firebase.storage().ref();\n            const imagesRef = storageRef.child('hero_section');\n            const imageList = await imagesRef.listAll();\n            // Get download URLs for each image\n            const urls = await Promise.all(\n                imageList.items.map(async (imageRef) => {\n                    return await imageRef.getDownloadURL();\n                })\n            );\n            setImageUrls(urls);\n        } catch (error) {\n            console.error('Error fetching images:', error);\n        }\n    };\n\n   \n    const handleUpload = async () => {\n        try {\n          if (!file) {\n            console.error('No file selected.');\n            return;\n          }\n      \n          const storageRef = firebase.storage().ref();\n          // Specify the path to the hero_section folder and include the file name\n          const fileRef = storageRef.child(`hero_section/${file.name}`);\n          await fileRef.put(file);\n          console.log('File uploaded successfully.');\n          \n          // Clear input field after successful upload\n          setFile(null);\n          fetchImages();\n        } catch (error) {\n          console.error('Error uploading file:', error);\n        }\n    };\n      \n\n    const handleDeleteClick = (id) => {\n        setSelectedId(id);\n        setDeleteDialogOpen(true);\n    };\n\n\n    const handleDeleteConfirm = async () => {\n        try {\n            const imageUrl = imageUrls[selectedId];\n            // Delete image from Firebase Storage\n            const storageRef = firebase.storage().refFromURL(imageUrl);\n            await storageRef.delete();\n\n            // Update state to remove deleted image\n            setImageUrls((prevImageUrls) =>\n                prevImageUrls.filter((url, index) => index !== selectedId)\n            );\n        } catch (error) {\n            console.error('Error deleting image:', error);\n        }\n        setDeleteDialogOpen(false);\n    };\n\n    return (\n        <div className='w-[40%]'>\n            <div className='border '>\n        <div>Hero Section</div>\n        <div className='flex flex-col items-center border rounded p-4'>\n        <input\n          type=\"file\"\n          accept=\"image/*\"\n          onChange={handleFileChange}\n          className=\"hidden\"\n          id=\"upload-file\"\n        />\n        <label htmlFor=\"upload-file\" className=\"cursor-pointer mb-2\">\n          Choose File\n        </label>\n        {file && (\n          <div className=\"flex items-center justify-between mb-2 w-full\">\n            <p className=\"truncate mr-2\">{file.name}</p>\n            <Button onClick={handleClearFile}>\n              <CloseIcon />\n            </Button>\n          </div>\n        )}\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={handleUpload}\n          disabled={!file}\n        >\n          Upload\n        </Button>\n      </div>\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Image</TableCell>\n                            <TableCell>Action</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {imageUrls.map((url, index) => (\n                            <TableRow key={index}>\n                                <TableCell>\n                                    <img src={url} alt={`Image ${index}`} width=\"100\" height=\"100\" />\n                                </TableCell>\n                                <TableCell>\n                                   \n                                    <IconButton onClick={() => handleDeleteClick(index)}>\n                                        <DeleteIcon />\n                                    </IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            \n\n            {/* Delete Confirmation Dialog */}\n            <Dialog open={deleteDialogOpen} onClose={() => setDeleteDialogOpen(false)}>\n                <DialogTitle>Delete Image</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>Are you sure you want to delete this image?</DialogContentText>\n                    <Button onClick={handleDeleteConfirm}>Confirm</Button>\n                    <Button onClick={() => setDeleteDialogOpen(false)}>Cancel</Button>\n                </DialogContent>\n            </Dialog>\n        </div>\n        </div>\n    );\n};\n\nexport default HeroSectionAdmin;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,cAAc,EAAEC,KAAK,EAAEC,SAAS,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,EAAEC,MAAM,EAAEC,WAAW,EAAEC,aAAa,EAAEC,iBAAiB,EAAEC,MAAM,EAAEC,SAAS,QAAQ,eAAe;AACtL,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C;AACA,OAAOC,QAAQ,MAAM,sBAAsB;AAC3C,OAAOC,SAAS,MAAM,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,gBAAgB,GAAGA,CAAA,KAAM;E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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}