{"ast":null,"code":"var _jsxFileName = \"/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/component/HeroSection.js\",\n  _s = $RefreshSig$();\nimport CustomSlider from \"../component/CustomCarousel\";\nimport \"../App.css\";\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../firebase/firebase'; // Update the path as per your file structure\n\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction HeroSection() {\n  _s();\n  const [imageUrls, setImageUrls] = useState([]);\n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const storageRef = firebase.storage().ref();\n        const imagesRef = storageRef.child('hero_section'); // Update the path to your folder\n\n        // List all images in the folder\n        const imageList = await imagesRef.listAll();\n\n        // Get download URLs for each image\n        const urls = await Promise.all(imageList.items.map(async imageRef => {\n          return await imageRef.getDownloadURL();\n        }));\n        setImageUrls(urls);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n    fetchImages();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: imageUrls.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: url,\n        alt: `Image ${index}`\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: /*#__PURE__*/_jsxDEV(CustomSlider, {\n        children: imageUrls.map((image, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"relative\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: image.map((url, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n                src: url,\n                alt: `Image ${index}`\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 11\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n_s(HeroSection, \"lLyFNr2xbDO9YM5WORw+Tq9Isik=\");\n_c = HeroSection;\nexport default HeroSection;\nvar _c;\n$RefreshReg$(_c, \"HeroSection\");","map":{"version":3,"names":["CustomSlider","React","useEffect","useState","firebase","jsxDEV","_jsxDEV","HeroSection","_s","imageUrls","setImageUrls","fetchImages","storageRef","storage","ref","imagesRef","child","imageList","listAll","urls","Promise","all","items","map","imageRef","getDownloadURL","error","console","children","url","index","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","className","image","_c","$RefreshReg$"],"sources":["/home/sourav_choudhary/Desktop/havensofa/haven-sofa/src/component/HeroSection.js"],"sourcesContent":["\nimport CustomSlider from \"../component/CustomCarousel\";\nimport \"../App.css\";\nimport React, { useEffect, useState } from 'react';\nimport firebase from '../firebase/firebase'; // Update the path as per your file structure\n\nimport 'firebase/compat/firestore';\nimport 'firebase/compat/storage';\n\nfunction HeroSection() {\n    const [imageUrls, setImageUrls] = useState([]);\n\n \n  useEffect(() => {\n    const fetchImages = async () => {\n      try {\n        const storageRef = firebase.storage().ref();\n        const imagesRef = storageRef.child('hero_section'); // Update the path to your folder\n\n        // List all images in the folder\n        const imageList = await imagesRef.listAll();\n\n        // Get download URLs for each image\n        const urls = await Promise.all(\n          imageList.items.map(async (imageRef) => {\n            return await imageRef.getDownloadURL();\n          })\n        );\n\n        setImageUrls(urls);\n      } catch (error) {\n        console.error('Error fetching images:', error);\n      }\n    };\n\n    fetchImages();\n  }, []);\n\n\n  return <div>\n    <div>\n      {imageUrls.map((url, index) => (\n        <img key={index} src={url} alt={`Image ${index}`} />\n      ))}\n    </div>\n    <div className=\"relative\">\n      <CustomSlider>\n        {imageUrls.map((image, index) => {\n          return (\n            <div key={index} className=\"relative\">\n              <div>\n        {image.map((url, index) => (\n          <img key={index} src={url} alt={`Image ${index}`} />\n        ))}\n      </div>\n              {/* <div className=\"absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 text-white text-center\">\n                <div className=\"bg-black bg-opacity-75 p-4 rounded-md\">\n                  <h1>{imageUrls.description}</h1>\n                </div>\n              </div> */}\n            </div>\n          );\n        })}\n      </CustomSlider>\n      </div>\n    \n  </div>;\n}\n\nexport default HeroSection;\n"],"mappings":";;AACA,OAAOA,YAAY,MAAM,6BAA6B;AACtD,OAAO,YAAY;AACnB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,sBAAsB,CAAC,CAAC;;AAE7C,OAAO,2BAA2B;AAClC,OAAO,yBAAyB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjC,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAGhDD,SAAS,CAAC,MAAM;IACd,MAAMS,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC9B,IAAI;QACF,MAAMC,UAAU,GAAGR,QAAQ,CAACS,OAAO,CAAC,CAAC,CAACC,GAAG,CAAC,CAAC;QAC3C,MAAMC,SAAS,GAAGH,UAAU,CAACI,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;;QAEpD;QACA,MAAMC,SAAS,GAAG,MAAMF,SAAS,CAACG,OAAO,CAAC,CAAC;;QAE3C;QACA,MAAMC,IAAI,GAAG,MAAMC,OAAO,CAACC,GAAG,CAC5BJ,SAAS,CAACK,KAAK,CAACC,GAAG,CAAC,MAAOC,QAAQ,IAAK;UACtC,OAAO,MAAMA,QAAQ,CAACC,cAAc,CAAC,CAAC;QACxC,CAAC,CACH,CAAC;QAEDf,YAAY,CAACS,IAAI,CAAC;MACpB,CAAC,CAAC,OAAOO,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAChD;IACF,CAAC;IAEDf,WAAW,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAGN,oBAAOL,OAAA;IAAAsB,QAAA,gBACLtB,OAAA;MAAAsB,QAAA,EACGnB,SAAS,CAACc,GAAG,CAAC,CAACM,GAAG,EAAEC,KAAK,kBACxBxB,OAAA;QAAiByB,GAAG,EAAEF,GAAI;QAACG,GAAG,EAAG,SAAQF,KAAM;MAAE,GAAvCA,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoC,CACpD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACN9B,OAAA;MAAK+B,SAAS,EAAC,UAAU;MAAAT,QAAA,eACvBtB,OAAA,CAACN,YAAY;QAAA4B,QAAA,EACVnB,SAAS,CAACc,GAAG,CAAC,CAACe,KAAK,EAAER,KAAK,KAAK;UAC/B,oBACExB,OAAA;YAAiB+B,SAAS,EAAC,UAAU;YAAAT,QAAA,eACnCtB,OAAA;cAAAsB,QAAA,EACLU,KAAK,CAACf,GAAG,CAAC,CAACM,GAAG,EAAEC,KAAK,kBACpBxB,OAAA;gBAAiByB,GAAG,EAAEF,GAAI;gBAACG,GAAG,EAAG,SAAQF,KAAM;cAAE,GAAvCA,KAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAoC,CACpD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACC;UAAC,GALUN,KAAK;YAAAG,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAWV,CAAC;QAEV,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACU;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEL,CAAC;AACR;AAAC5B,EAAA,CA1DQD,WAAW;AAAAgC,EAAA,GAAXhC,WAAW;AA4DpB,eAAeA,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}